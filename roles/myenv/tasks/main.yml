---
# tasks file for myenv
- name: register subscription and yum proxy setting
  import_tasks: yum_setup.yml

- name: install fedora packages
  package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ fedora_packages }}"
  when: ansible_distribution == "Fedora"

- name: install redhat packages
  package:
    name: "{{ item }}"
    state: latest
  register: result
  until: result is success
  retries: 3
  delay: 5
  with_items: "{{ redhat_packages }}"
  when: ansible_distribution == "RedHat"

- name: install centos packages
  package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ centos_packages }}"
  when: ansible_distribution == "CentOS"

- name: install packages
  package:
    name: "{{ item }}"
    state: latest
    enablerepo: "{{ (ansible_distribution == 'RedHat') | ternary('rhel-7-server-optional-rpms','') }}"
  register: result
  until: result is success
  retries: 3
  delay: 5
  with_items: "{{ packages }}"

- name: upgrade all package (Fedora)
  dnf:
    name: "*"
    state: latest
  when: ansible_distribution == "Fedora"

- name: upgrade all package (RHEL and CentOS)
  yum:
    name: "*"
    state: latest
  when: ansible_distribution != "Fedora"

- name: install pyenv
  git:
    repo: 'https://github.com/pyenv/pyenv.git'
    dest: "/home/{{ my_user }}/.pyenv"
  become: true
  become_user: "{{ my_user }}"

- name: install rbenv
  git:
    repo: 'https://github.com/rbenv/rbenv.git'
    dest: "/home/{{ my_user }}/.rbenv"
  become: true
  become_user: "{{ my_user }}"

- name: install ruby-build
  git:
    repo: 'https://github.com/rbenv/ruby-build.git'
    dest: "/home/{{ my_user }}/.rbenv/plugins/ruby-build"
  become: true
  become_user: "{{ my_user }}"

- name: define tmux setting
  blockinfile:
    dest: "/home/{{ my_user }}/.tmux.conf"
    create: yes
    block: |
      # tmux setting
      set-option -g prefix C-z
      unbind-key C-b
      bind-key C-z send-prefix

      set-window-option -g mode-keys vi

      set-option -g history-limit 5000

      unbind-key C-z
      bind-key C-z last-window
      bind-key z send-prefix
  become: true
  become_user: "{{ my_user }}"

- name: define pyenv and rbenv setting
  blockinfile:
    dest: "/home/{{ my_user }}/.bash_profile"
    block: |
      ## pyenv (python)
      if [ -e "$HOME/.pyenv" ]; then
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init -)"
      fi

      ## rbenv (ruby)
      if [ -e "$HOME/.rbenv" -o -e "/usr/local/bin/rbenv" ]; then
          export RBENV_ROOT="$HOME/.rbenv"
          export PATH="$RBENV_ROOT/bin:$PATH"
          eval "$(rbenv init -)"
      fi

      ## golang
      if [ -e "$HOME/.go" ]; then
          export GOPATH="$HOME/.go"
          export PATH="$GOPATH/bin:$PATH"
      fi

- name: create go dir
  file:
    path: "$HOME/.go"
    state: directory
  become: true
  become_user: "{{ my_user }}"

- name: install go package
  shell: bash -lc "go get -u {{ item.url }}"
  args:
    creates: "/home/{{ my_user }}/.go/bin/{{ item.bin }}"
  with_items: "{{ go_packages }}"
  become: true
  become_user: "{{ my_user }}"

- name: install fedora go package
  shell: bash -lc "go get -u {{ item.url }}"
  args:
    creates: "/home/{{ my_user }}/.go/bin/{{ item.bin }}"
  with_items: "{{ fedora_go_packages }}"
  become: true
  become_user: "{{ my_user }}"
  when: ansible_distribution == "Fedora"

- name: user.name for gitconfig
  git_config:
    name: "{{ item.name }}"
    scope: global
    value: "{{ item.value }}"
  with_items: "{{ git_config_param }}"
  become: true
  become_user: "{{ my_user }}"
